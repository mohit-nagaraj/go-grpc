/* define the remote procedure calls
    the actual code will be generated by the protoc compiler
    something like greet.pb.go & greet_grcp.pb.go
    so start here
*/
// protoc --go_out=. --go-grpc_out=. proto/greet.proto
syntax = "proto3";

option go_package = "./proto";

package greet_service;

service GreetService{
    // uniary api
    rpc SayHello(NoParam) returns (HelloResponse) {};

    // server streaming api
    // stream is used to return multiple responses
    rpc SayHelloStream(NamesList) returns (stream HelloResponse) {};

    // client streaming api
    rpc SayHelloClientStream(stream HelloRequest) returns (MessagesList) {};

    // bi-directional streaming api
    // most commonly used
    rpc SayHelloBiDiStream(stream HelloRequest) returns (stream HelloResponse) {};
}

message NoParam {
}

message HelloResponse {
    string message = 1;
}

message NamesList {
    // use repeated to define a list
    repeated string names = 1;
}

message HelloRequest {
    string name = 1;
}

message MessagesList {
    repeated string messages = 1;
}
